'use strict';

/*
(Task hinzufügen/editieren/löschen)
 */

(function (_) {

    if (!store.enabled) {
        alert('Local storage is not supported by your browser. Please disable "Private Mode", or upgrade to a modern browser.');
        return;
    }

    // prefill
    store.set('task1', { subject: 'marcus', description: 'javascript' });
    store.set('task2', { subject: 'blubber', description: 'javascript' });

    writeTasks(store.getAll());
})();

$('#task-cancel').on('click', function (e) {
    $(e.target).parentsUntil('.modal-dialog', '.modal-content').find('.form-control').each(function (i, el) {
        $(el).val('');
    });
});

$('#task-add').on('submit', function (e) {
    var tmp = {};
    e.preventDefault();

    try {
        $(e.target).find('.form-control').each(function (i, el) {
            if (!el.value) {
                throw new Exception();
            }
            tmp[el.name] = el.value;
            el.value = '';
        });

        store.set('task' + (getMaxId() + 1), tmp);
        $('#overlay-add').modal('hide');
        writeTasks(store.getAll());
    } catch (e) {
        return;
    }
});

$('#task-delete').on('submit', function (e) {
    e.preventDefault();

    try {
        $(e.target).find('input[name=key]').each(function (i, el) {
            if (!el.value) {
                throw new Exception();
            }
            if (el.value === 'all') {
                store.clear();
            } else {
                store.remove(el.value);
            }
            el.value = '';
        });

        $('#overlay-delete').modal('hide');
        writeTasks(store.getAll());
    } catch (e) {
        return;
    }
});

$('#overlay-delete').on('show.bs.modal', function (e) {
    var key = $(e.relatedTarget).data('whatever');
    $(e.target).find('input[name=key]').val(key);
});

function writeTasks(tasklist) {
    if (Object.keys(tasklist).length) {
        $('#empty').addClass('hidden');
    } else {
        $('#empty').removeClass('hidden');
    }

    clearTasks();

    $.each(tasklist, function (index, val) {
        $('#content').append('<article id="' + index + '" class="panel panel-default">\n    <header class="panel-heading clearfix">\n        <div class="btn-group pull-right">\n            <button type="button" class="btn btn-sm" data-whatever="' + index + '">Edit</button>\n            <button type="button" class="btn btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button>\n            <ul class="dropdown-menu">\n                <li><button type="button" class="btn btn-sm btn-link" data-whatever="' + index + '" data-toggle="modal" data-target="#overlay-delete">Delete</button></li>\n            </ul>\n        </div>\n\n        <h2 class="panel-title">' + val.subject + '</h2>\n    </header>\n    <section class="panel-body">\n        ' + val.description + '\n    </section>\n</article>');
    });
}

function clearTasks() {
    $('#content').find('.panel').remove();
}

function getMaxId() {
    var ids = [0];

    $('#content').find('.panel').each(function (i, el) {
        ids.push(el.id.substring(4));
    });

    return Math.max.apply(Math, ids);
}
